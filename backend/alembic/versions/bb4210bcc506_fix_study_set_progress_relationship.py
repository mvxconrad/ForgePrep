"""Fix study set progress relationship

Revision ID: bb4210bcc506
Revises: f41609852fa1
Create Date: 2025-03-13 19:37:10.485865

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'bb4210bcc506'
down_revision: Union[str, None] = 'f41609852fa1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_study_sets_id', table_name='study_sets')
    op.drop_index('ix_study_sets_title', table_name='study_sets')
    op.drop_table('study_sets')
    op.drop_index('ix_tests_id', table_name='tests')
    op.drop_table('tests')
    op.drop_index('ix_files_id', table_name='files')
    op.drop_table('files')
    op.drop_index('ix_study_materials_id', table_name='study_materials')
    op.drop_table('study_materials')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_user_progress_id', table_name='user_progress')
    op.drop_table('user_progress')
    op.drop_index('ix_flashcards_id', table_name='flashcards')
    op.drop_index('ix_flashcards_question', table_name='flashcards')
    op.drop_table('flashcards')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('flashcards',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('question', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('answer', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('set_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['set_id'], ['study_sets.id'], name='flashcards_set_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='flashcards_pkey')
    )
    op.create_index('ix_flashcards_question', 'flashcards', ['question'], unique=False)
    op.create_index('ix_flashcards_id', 'flashcards', ['id'], unique=False)
    op.create_table('user_progress',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('study_set_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('progress', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['study_set_id'], ['study_sets.id'], name='user_progress_study_set_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_progress_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_progress_pkey')
    )
    op.create_index('ix_user_progress_id', 'user_progress', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('hashed_password', sa.VARCHAR(), server_default=sa.text("'defaultpassword'::character varying"), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_username', 'users', ['username'], unique=True)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.create_table('study_materials',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('study_materials_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('filename', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('uploaded_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='study_materials_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='study_materials_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_study_materials_id', 'study_materials', ['id'], unique=False)
    op.create_table('files',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('filename', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('content', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='files_pkey')
    )
    op.create_index('ix_files_id', 'files', ['id'], unique=False)
    op.create_table('tests',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('study_material_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('test_metadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['study_material_id'], ['study_materials.id'], name='tests_study_material_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='tests_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='tests_pkey')
    )
    op.create_index('ix_tests_id', 'tests', ['id'], unique=False)
    op.create_table('study_sets',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='study_sets_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='study_sets_pkey')
    )
    op.create_index('ix_study_sets_title', 'study_sets', ['title'], unique=False)
    op.create_index('ix_study_sets_id', 'study_sets', ['id'], unique=False)
    # ### end Alembic commands ###
